# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# See what the vm images are and what they have installed:
# https://github.com/actions/virtual-environments/#available-environments

trigger:
  batch: true
  branches:
    include:
    - master
    - releases/*
    - features/*
  paths:
    exclude: [ 'README.md' ]

jobs:
- job: Linux
  pool: {vmImage: 'ubuntu-latest'}
  variables:
    BSV_BUILD_PATH: '$(Build.BinariesDirectory)/bitcoin-sv-centos7'
  timeoutInMinutes: 120
  strategy:
    matrix:
      Python37:
        python.version: 'cp37'
      Python38:
        python.version: 'cp38'
      Python39:
        python.version: 'cp39'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7
    - bash: |
        export "CIBW_BUILD=$(python.version)-manylinux_x86_64"
        export CIBW_BUILD_VERBOSITY=1
        export CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==1.6.4
        cibuildwheel --output-dir wheelhouse .
      displayName: Build Bitcoin SV (autotools) / Python packaging
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Linux'
        pathtoPublish: 'wheelhouse'
    - script: |
        python3 -m pip install pytest pytest-cov wheel
        python3 ./contrib/install_built_wheel.py wheelhouse
        cd tests
        python3 -m pytest -v -v -v .
      displayName: Install from wheel and run tests

- job: MacOS
  pool: {vmImage: 'macos-10.15'}
  variables:
    BSV_BUILD_PATH: '$(Build.BinariesDirectory)/bitcoin-sv-macos'
  strategy:
    matrix:
      Python37:
        python.version: 'cp37'
      Python38:
        python.version: 'cp38'
      Python39:
        python.version: 'cp39'
  steps:
    - script: |
        export "CIBW_BUILD=$(python.version)-macosx_x86_64"
        export CIBW_BUILD_VERBOSITY=1
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==1.6.4
        cibuildwheel --output-dir wheelhouse .
      displayName: Build Bitcoin SV (autotools) / Python packaging
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'MacOS'
        pathtoPublish: 'wheelhouse'
    - script: |
        python3 -m pip install wheel
        python3 -m pip install wheelhouse/electrumsv_node-
        python3 -m pip install pytest pytest-cov
      displayName: 'install sdk'
    - script: |
        python3 -m pip install pytest pytest-cov wheel
        python3 ./contrib/install_built_wheel.py wheelhouse
        cd tests
        python3 -m pytest -v -v -v .
      displayName: Install from wheel and run tests

- job: Windows
  pool: {vmImage: 'windows-latest'}
  variables:
    BSV_BUILD_PATH: '$(Build.BinariesDirectory)\bitcoin-sv-windows'
    vcpkgVersion: 2020.06.15
    vcpkgInstallParamFile: '$(Build.SourcesDirectory)/.azure-pipelines/vcpkg/x64-windows-static.txt'
    vcpkgBinariesPath: 'C:\Users\VssAdministrator\AppData\Local\vcpkg\archives'
  timeoutInMinutes: 120
  strategy:
    matrix:
      Python37:
        python.version: 'cp37'
      Python38:
        python.version: 'cp38'
      Python39:
        python.version: 'cp39'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7
        architecture: x86
    - task: Cache@2
      displayName: Cache vcpkg
      inputs:
        key: $(vcpkgInstallParamFile) | "$(vcpkgVersion)" | "$(Agent.OS)"
        path: '$(vcpkgBinariesPath)'
    - script: |
        set "CIBW_BUILD=$(python.version)-win_amd64 $(python.version)-win32"
        set CIBW_BUILD_VERBOSITY=1
        py -3 -m pip install --upgrade pip
        py -3 -m pip install cibuildwheel==1.6.4
        py -3 -m cibuildwheel --output-dir wheelhouse .
      displayName: Build Bitcoin SV (autotools) / Python packaging
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Windows'
        pathtoPublish: 'wheelhouse'
    - script: |
        py -3 -m pip install pytest pytest-cov wheel
        py -3 ./contrib/install_built_wheel.py wheelhouse
        cd tests
        py -3 -m pytest -v -v -v .
      displayName: Install from wheel and run tests
